- hosts: all
  become: yes
  vars:
    - postgresql_version: 9.4 # version de postgres a utilizar
    - postgresql_db: netcop
    - postgresql_user: netcop
    - postgresql_password: netcop
    - src_path: /root/netcop # directorio donde se guardara el codigo fuente
    - bin_path: /usr/local/bin # directorio donde estaran los binarios
    - etc_path: /etc/netcop # directorio donde estaran los archivos de conf
    - if_outside: eth0
    - if_inside: eth1

  # Tasks
  # =========================================================================
  
  # utilidades
  # -------------------------------------------------------------------------
  tasks:
  - name: Instalar dependencias
    apt: name={{ item }}
    with_items:
      - bridge-utils
      - git
      - make
      - gcc
      - locales

  - name: Instalar paquetes opcionales
    apt: name={{ item }}
    with_items:
      - screen
      - vim
  
  - name: Crear carpeta de configuracion netcop
    file: name={{ etc_path }} state=directory

  - name: Copiar archivo configuracion netcop
    template: src=templates/netcop.config.j2 
              dest={{ etc_path }}/netcop.config

  # postgresql
  # -------------------------------------------------------------------------
  - name: Crear locales
    locale_gen: name=en_US.UTF-8 state=present

  - name: Instalar PostgreSQL {{ postgresql_version }}
    apt: name={{ item }}
    notify: crear cluster
    with_items:
      - python-psycopg2
      - postgresql-{{ postgresql_version }}

  - name: Configurar permisos
    template: src=templates/pg_hba.conf.j2
              dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf

  - name: Habilitar servicio postgresql
    service: name=postgresql enabled=yes state=started

  - name: Crear usuario de postgres {{ postgresql_user }}
    postgresql_user: name={{ postgresql_user }}
                     password={{ postgresql_password }}
    become_user: postgres

  - name: Crear base de datos
    postgresql_db: name={{ postgresql_db }} 
                   login_user={{ postgresql_user }}
                   login_password={{ postgresql_password }}

  - name: Copiar esquema de la base de datos de Netcop
    copy: src=templates/schema.sql dest=/tmp/schema.sql

  - name: Crear tablas
    command: psql -f /tmp/schema.sql -d {{ postgresql_db }}
    become_user: postgres

  - name: Borrar archivo temporal esquema
    file: name=/tmp/schema.sql state=absent

  # adquisidor
  # -------------------------------------------------------------------------
  - name: Instalar dependencias adquisidor
    apt: name={{ item }}
    with_items:
      - libecpg-dev
      - libpcap-dev
  
  - name: Descargar ultima version del adquisidor
    git: repo=https://github.com/Grupo106/adquisidor.git
         dest={{ src_path }}/adquisidor
         version=master

  - name: Compilar e instalar adquisidor
    command: make {{ item }} chdir={{ src_path }}/adquisidor
    with_items:
      - clean
      - release
      - install
    environment:
      - POSTGRESQL_DB: "{{ postgresql_db }}"
      - POSTGRESQL_USER: "{{ postgresql_user }}"
      - POSTGRESQL_PASSWORD: "{{ postgresql_password }}"

  - name: Instalar servicio adquisidor
    template: src=templates/adquisidor.service.j2 
              dest=/etc/systemd/system/adquisidor.service

  - name: Iniciar servicio adquisidor
    service: name=adquisidor enabled=yes state=started

  # analizador
  # -------------------------------------------------------------------------
  - name: Instalar dependencias analizador
    apt: name={{ item }}
    with_items:
      - libecpg-dev
  
  - name: Descargar ultima version del analizador
    git: repo=https://github.com/Grupo106/analizador.git
         dest={{ src_path }}/analizador
         version=master

  - name: Compilar e instalar analizador
    command: make {{ item }} chdir={{ src_path }}/analizador
    with_items:
      - clean
      - release
      - install
    environment:
      POSTGRESQL_DB: "{{ postgresql_db }}"
      POSTGRESQL_USER: "{{ postgresql_user }}"
      POSTGRESQL_PASSWORD: "{{ postgresql_password }}"

  # configuracion de puente de red
  # -------------------------------------------------------------------------
  - name: Configurar puente de red
    template: src=templates/etc/network/interfaces
              dest=/etc/network/interfaces
    notify:
      - reboot

  # Handlers
  # =========================================================================
  handlers:
  - name: crear cluster
    command: pg_createcluster {{ postgresql_version }} main --start

  - name: reboot
    command: shutdown -r now "Ansible updates triggered"
    async: 0
    poll: 0
    ignore_errors: true
