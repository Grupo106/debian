- hosts: all
  become: yes
  vars:
    - postgresql_version: 9.4 # version de postgres a utilizar
    - postgresql_db: netcop
    - postgresql_user: netcop
    - postgresql_password: netcop
    - src_path: /code # directorio donde se guardara el codigo fuente
    - bin_path: /usr/local/bin # directorio donde estaran los binarios
    - etc_path: /etc/netcop # directorio donde estaran los archivos de conf
    - www_path: /var/www/html # directorio donde estaran los archivos PHP
    - if_outside: eth0
    - if_inside: eth1
    - codeigniter_version: 3.0.6

  # Tasks
  # =========================================================================

  # utilidades
  # -------------------------------------------------------------------------
  tasks:
  - name: Instalar dependencias
    apt: name={{ item }}
    with_items:
      - bridge-utils
      - git
      - make
      - gcc
      - locales
      - unzip

  - name: Instalar paquetes opcionales
    apt: name={{ item }}
    with_items:
      - screen
      - vim

  - name: Crear carpetas de netcop
    file: name={{ etc_path }} state=directory
    with_items:
      - "{{ src_path }}"
      - "{{ etc_path }}"
      - "{{ www_path }}"

  - name: Copiar archivo configuracion netcop
    template: src=templates/netcop.config.j2
              dest={{ etc_path }}/netcop.config

  - name: Configurar banner
    template: src=templates/motd.j2
              dest=/etc/motd

  # postgresql
  # -------------------------------------------------------------------------
  - name: Crear locales
    locale_gen: name=en_US.UTF-8 state=present

  - name: Instalar PostgreSQL {{ postgresql_version }}
    apt: name={{ item }}
    notify: crear cluster
    with_items:
      - python-psycopg2
      - postgresql-{{ postgresql_version }}

  - name: Crear cluster
    shell: pg_createcluster {{ postgresql_version }} main --start || /bin/true
    environment:
      - LC_ALL: en_US.UTF-8

  - name: Configurar permisos
    template: src=templates/pg_hba.conf.j2
              dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf

  - name: Habilitar servicio postgresql
    service: name=postgresql enabled=yes state=started

  - name: Crear usuario de postgres {{ postgresql_user }}
    postgresql_user: name={{ postgresql_user }}
                     password={{ postgresql_password }}
    become_user: postgres

  - name: Crear base de datos
    postgresql_db: name={{ postgresql_db }}
                   owner={{ postgresql_user }}
    become_user: postgres

  - name: Establecer privilegios del usuario {{ postgresql_user }}
    postgresql_privs: db={{ postgresql_db }}
                      roles={{ postgresql_user }}
                      privs=INSERT,UPDATE,SELECT
                      objs=ALL_IN_SCHEMA
    become_user: postgres

  - name: Establecer privilegios del usuario {{ postgresql_user }} (secuencia)
    postgresql_privs: db={{ postgresql_db }}
                      roles={{ postgresql_user }}
                      privs=UPDATE,SELECT
                      objs=ALL_IN_SCHEMA
                      type=sequence
    become_user: postgres

  - name: Copiar esquema de la base de datos de Netcop
    copy: src=templates/schema.sql dest=/tmp/schema.sql

  - name: Crear tablas
    command: psql -f /tmp/schema.sql -d {{ postgresql_db }}
    become_user: postgres

  # adquisidor
  # -------------------------------------------------------------------------
  - name: Instalar dependencias adquisidor
    apt: name={{ item }}
    with_items:
      - libecpg-dev
      - libpcap-dev

  - name: Descargar ultima version del adquisidor
    git: repo=https://github.com/Grupo106/adquisidor.git
         dest={{ src_path }}/adquisidor
         version=master
    register: compile

  - name: Compilar e instalar adquisidor
    command: make {{ item }} chdir={{ src_path }}/adquisidor
    with_items:
      - clean
      - release
      - install
    environment:
      - POSTGRESQL_DB: "{{ postgresql_db }}"
      - POSTGRESQL_USER: "{{ postgresql_user }}"
      - POSTGRESQL_PASSWORD: "{{ postgresql_password }}"
    when: compile

  - name: Instalar servicio adquisidor
    template: src=templates/adquisidor.service.j2
              dest=/etc/systemd/system/adquisidor.service

  - name: Iniciar servicio adquisidor
    service: name=adquisidor enabled=yes state=started

  # analizador
  # -------------------------------------------------------------------------
  - name: Instalar dependencias analizador
    apt: name={{ item }}
    with_items:
      - libecpg-dev

  - name: Descargar ultima version del analizador
    git: repo=https://github.com/Grupo106/analizador.git
         dest={{ src_path }}/analizador
         version=master
    register: compile

  - name: Compilar e instalar analizador
    command: make {{ item }} chdir={{ src_path }}/analizador
    with_items:
      - clean
      - release
      - install
    environment:
      POSTGRESQL_DB: "{{ postgresql_db }}"
      POSTGRESQL_USER: "{{ postgresql_user }}"
      POSTGRESQL_PASSWORD: "{{ postgresql_password }}"
    when: compile

  # UI
  # -------------------------------------------------------------------------
  - name: Instalar dependencias de UI
    apt: name={{ item }}
    with_items:
      - nginx-light
      - php5
      - php5-fpm

  - name: Copiar configuracion de nginx
    template: src=templates/nginx.netcop.j2
              dest=/etc/nginx/sites-available/netcop
    notify: reiniciar nginx

  - name: Deshabilitar sitio por default
    file: path=/etc/nginx/sites-enabled/default state=absent
    notify: reiniciar nginx

  - name: Habilitar sitio netcop
    file: dest=/etc/nginx/sites-enabled/netcop
          src=/etc/nginx/sites-available/netcop
          state=link
    notify: reiniciar nginx

  - name: Descargar Code Igniter {{ codeigniter_version }}
    get_url: url=https://codeload.github.com/bcit-ci/CodeIgniter/zip/{{ codeigniter_version }}
             dest=/tmp/codeigniter.zip

  - name: Descomprimir code igniter
    unarchive: src=/tmp/codeigniter.zip
               dest=/tmp
               copy=no

  - name: Mover CodeIgniter hacia {{ www_path }}
    file: src=/tmp/CodeIgniter-{{ codeigniter_version }}
          dest={{ www_path }}

  - name: Iniciar nginx
    service: name=nginx enabled=yes state=started

  # configuracion de puente de red
  # -------------------------------------------------------------------------
  - name: Configurar puente de red
    template: src=templates/etc/network/interfaces
              dest=/etc/network/interfaces
    notify:
      - reboot

  # Handlers
  # =========================================================================
  handlers:

  - name: reboot
    command: shutdown -r now "Ansible updates triggered"
    async: 0
    poll: 0
    ignore_errors: true

  - name: reiniciar nginx
    service: name=nginx state=restarted
